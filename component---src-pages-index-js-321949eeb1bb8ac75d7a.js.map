{"version":3,"file":"component---src-pages-index-js-321949eeb1bb8ac75d7a.js","mappings":"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","sources":["webpack://homepage/./src/components/assets/getImage.js","webpack://homepage/./src/components/ui-blocks/TextBox.js","webpack://homepage/./src/components/ui-blocks/Img.js","webpack://homepage/./src/components/ui-blocks/Img2.js","webpack://homepage/./src/components/ui-blocks/BodyFrame.js","webpack://homepage/./src/components/ui-blocks/Row.js","webpack://homepage/./src/components/ui-blocks/Box.js","webpack://homepage/./src/components/ui-blocks/MenuLink.js","webpack://homepage/./src/components/ui-blocks/MenuLinkExternal.js","webpack://homepage/./src/components/header/Header.js","webpack://homepage/./src/components/intro-panel/IntroPanel.js","webpack://homepage/./src/content/footer/FooterRow.js","webpack://homepage/./src/content/footer/FooterMenu.js","webpack://homepage/./src/content/footer/FooterGraphic.js","webpack://homepage/./src/content/footer/FooterBody.js","webpack://homepage/./src/content/footer/SocialIcons.js","webpack://homepage/./src/content/footer/Copyright.js","webpack://homepage/./src/content/footer/Footer.js","webpack://homepage/./src/content/box1/ui.js","webpack://homepage/./src/content/box1/Box1Content.js","webpack://homepage/./src/content/box1/Box1.js","webpack://homepage/./src/content/box2/ui.js","webpack://homepage/./src/content/box2/Box2Content.js","webpack://homepage/./src/content/box2/Box2.js","webpack://homepage/./src/components/forms/Form.js","webpack://homepage/./src/components/forms/Button.js","webpack://homepage/./src/components/forms/Textarea.js","webpack://homepage/./src/components/forms/Label.js","webpack://homepage/./src/components/forms/Input.js","webpack://homepage/./src/components/forms/Link.js","webpack://homepage/./src/components/forms/ExternalLink.js","webpack://homepage/./src/content/box3/ui.js","webpack://homepage/./src/content/box3/Box3Content.js","webpack://homepage/./src/content/box3/Box3.js","webpack://homepage/./src/pages/index.js"],"sourcesContent":["const getImage = (data, name) => {\n  return data.allFile.edges.filter(\n    f => f.node.name === name\n  )[0].node.publicURL\n}\n\nexport { getImage }\n","import styled from '@emotion/styled'\n\nconst TextBox = styled.p({\n  margin: 0,\n  padding: '20px 15px',\n  fontSize: '11pt',\n  '@media (min-width: 800px)': {\n    fontSize: '12pt',\n    padding: '20px 50px'\n  },\n  letterSpacing: '1px',\n  width: '100%',\n  // '@media (max-width: 800px)': {\n  //   fontSize: '18px'\n  // },\n  fontFamily: 'HelveticaNeue, Helvetica Neue, sans-serif',\n  color: 'white'\n})\n\nexport { TextBox }\n","import styled from '@emotion/styled'\n\nconst Img = styled.img({\n  margin: '0 0 0 0',\n  width: '25%',\n  height: 'auto',\n  minWidth: '170px',\n  '@media (max-width: 400px)': {\n    width: '50%',\n    minWidth: '150px'\n  }\n})\n\nexport { Img }\n","import styled from '@emotion/styled'\n\nconst Img2 = styled.img({\n  margin: '0 0 0 0',\n  width: '40%',\n  height: 'auto',\n  minWidth: '250px',\n  '@media (max-width: 400px)': {\n    width: '70%',\n    minWidth: '220px'\n  }\n})\n\nexport { Img2 }\n","import styled from '@emotion/styled'\n\nconst BodyFrame = styled.div({\n  display: 'flex',\n  flexFlow: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  minWidth: '300px',\n  width: '100%',\n  '@media (min-width: 950px)': {\n    width: '80%'\n  },\n  maxWidth: '1200px'\n})\n\nexport { BodyFrame }\n","import styled from '@emotion/styled'\n\nconst Row = styled.div({\n  width: '90%',\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  justifyContent: 'space-around',\n  '@media (max-width: 800px)': {\n    flexFlow: 'column',\n    justifyContent: 'center',\n    textAlign: 'center'\n  },\n  alignItems: 'center',\n  marginBottom: '30px'\n})\n\nexport { Row }\n","import styled from '@emotion/styled'\n\nconst Box = styled.div({\n  display: 'flex',\n  flexFlow: 'column',\n  alignItems: 'center',\n  backgroundImage: 'linear-gradient(#0C3C52, #5182BD)',\n  padding: '15px 0',\n  '@media (min-width: 800px)': {\n    padding: '15px'\n  },\n  width: '100%',\n  fontSize: '12pt'\n}, ({ backgroundStyles }) => (\n  { ...backgroundStyles }\n))\n\nexport { Box }\n","import styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nconst MenuLink = styled(Link)({\n  display: 'inline-block',\n  color: '#74b9ab',\n  fontFamily: 'RobotoMono-Regular, Roboto Mono, monospace',\n  fontSize: '10pt',\n  '&:hover': {\n    color: 'white',\n    textDecoration: 'none'\n  }\n})\n\nexport { MenuLink }\n","import styled from '@emotion/styled'\n\nconst MenuLinkExternal = styled.a({\n  display: 'inline-block',\n  color: '#D20DE7',\n  fontFamily: 'Roboto Mono, monospace',\n  margin: '5px 20px',\n  fontSize: '10pt',\n  '&:hover': {\n    color: 'white',\n    textDecoration: 'none'\n  }\n}, ({ styles }) => (\n  { ...styles }\n))\n\nexport { MenuLinkExternal }\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { getImage } from 'src/components/assets'\n\nimport { MenuLinkExternal } from 'src/components/ui-blocks'\n\nconst Logo = styled.div({\n  display: 'flex',\n  flexFlow: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  margin: '20px'\n})\n\nconst LogoImg = styled.img({\n  margin: 0\n})\n\nconst LogoText = styled.p({\n  display: 'inline-block',\n  margin: 0,\n  color: 'white',\n  fontFamily: 'Roboto Mono, monospace',\n  fontSize: '10pt',\n  marginLeft: '20px',\n  whiteSpace: 'nowrap'\n})\n\nconst Menu = styled.div({\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  justifyContent: 'flex-end',\n  alignItems: 'center'\n})\n\nconst HyperWrapper = styled.div({\n  display: 'flex',\n  justifyContent: 'center',\n  width: '100vw',\n  '@media (min-width: 800px)': {\n    position: 'fixed',\n    width: '100%',\n    top: 0,\n    zIndex: 0\n  },\n  backgroundColor: 'black'\n})\n\nconst Wrapper = styled.div({\n  width: '100%',\n  maxWidth: '1200px',\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-between',\n  backgroundColor: 'black',\n  opacity: '1.0'\n})\n\nconst Header = ({ data }) => (\n  <HyperWrapper>\n    <Wrapper>\n      <Logo>\n        <LogoImg alt='header logo' src={getImage(data, 'header-logo')} width='40px' />\n        <LogoText>Confluenza</LogoText>\n      </Logo>\n      <Menu>\n        <MenuLinkExternal\n          styles={{ color: 'white' }}\n          href='https://github.com/confluenza/confluenza'\n          target='_blank'\n          // see https://mathiasbynens.github.io/rel-noopener\n          rel='noopener noreferrer'\n        >Github\n        </MenuLinkExternal>\n        <MenuLinkExternal\n          styles={{ color: 'white' }}\n          href='https://twitter.com/confluenza1'\n          target='_blank'\n          rel='noopener noreferrer'\n        >Twitter\n        </MenuLinkExternal>\n        {/* <MenuLinkExternal\n          styles={{ color: 'white' }}\n          href='http://marcinczenko.github.io'\n          target='_blank'\n          rel='noopener noreferrer'\n        >Blog\n        </MenuLinkExternal> */}\n      </Menu>\n    </Wrapper>\n  </HyperWrapper>\n)\n\nexport { Header }\n","import React, { useRef, useEffect } from 'react'\nimport styled from '@emotion/styled'\nimport Media from 'react-media'\n\nimport { getImage } from 'src/components/assets'\n\nconst Panel = styled.div({\n  width: '100%',\n  paddingLeft: '30px',\n  paddingRight: '30px',\n  backgroundColor: 'black',\n  height: 'calc(100vh - 114px)',\n  display: 'flex',\n  flexFlow: 'column',\n  justifyContent: 'flex-start',\n  marginTop: '40px',\n  alignItems: 'center',\n  '@media (min-width: 800px)': {\n    height: 'calc(100vh - 80px)',\n    marginTop: '80px',\n    flexFlow: 'row',\n    justifyContent: 'space-around'\n  }\n})\n\nconst Title = styled.h1({\n  marginBottom: '30px',\n  fontFamily: 'Roboto Mono, monospace',\n  fontSize: '18pt',\n  '@media (min-width: 500px)': {\n    fontSize: '32pt',\n    marginBottom: '50px'\n  },\n  '@media (min-width: 800px)': {\n    marginBottom: '10px',\n    fontSize: '48pt'\n  },\n  '@media (min-width: 1000px)': {\n    marginBottom: '10px',\n    fontSize: '56pt'\n  },\n  fontWeight: '400',\n  color: '#568a80',\n  textAlign: 'center'\n})\n\nconst TitleContainer = styled.div({\n  display: 'flex',\n  flexFlow: 'column',\n  alignItems: 'flex-end',\n  justifyContent: 'center'\n})\n\nconst Subtitle = styled.h2({\n  fontFamily: 'Roboto Mono, monospace',\n  fontWeight: 400,\n  lineHeight: '1.4',\n  fontSize: '12pt',\n  margin: '20px',\n  '@media (min-width: 500px)': {\n    margin: '50px',\n    fontSize: '20pt'\n  },\n  '@media (min-width: 800px)': {\n    margin: '5px 0 20px 0',\n    fontSize: '24pt'\n  },\n  color: '#f57344',\n  textAlign: 'center'\n})\n\nconst Img = styled.img({\n  margin: 0,\n  width: '50%',\n  '@media (min-width: 500px)': {\n    width: '60%'\n  },\n  '@media (min-width: 800px)': {\n    width: '400px'\n  }\n})\n\nconst IntroPanel = ({ data }) => {\n  const panel = useRef(null)\n\n  const updateSize = () => {\n    const width = window.innerWidth\n    const height = window.innerHeight\n\n    if (width > 370) {\n      panel.current.style.height = 'calc(100vh - 80px)'\n      if (width > 500 && width < 800 && height < 768) {\n        panel.current.style.height = '768px'\n      }\n    } else {\n      if (height < 435) {\n        panel.current.style.height = '435px'\n      } else {\n        panel.current.style.height = 'calc(100vh - 154px)'\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', updateSize)\n    updateSize()\n    return () => window.removeEventListener('resize', updateSize)\n  })\n\n  return (\n    <Panel ref={panel}>\n      <Media\n        query='(max-width: 799px)' render={() => (\n          <Title>Confluenza</Title>\n        )}\n      />\n      <Img alt='Intro' src={getImage(data, 'intro-panel')} />\n      <Media\n        query='(min-width: 800px)' render={() => (\n          <TitleContainer>\n            <Title>Confluenza</Title>\n            <Subtitle>flexible markdown documentation</Subtitle>\n          </TitleContainer>\n        )}\n      />\n      <Media\n        query='(max-width: 799px)' render={() => (\n          <Subtitle>flexible markdown documentation</Subtitle>\n        )}\n      />\n    </Panel>\n  )\n}\n\nexport { IntroPanel }\n","import styled from '@emotion/styled'\n\nconst FooterRow = styled.div({\n  boxSizing: 'border-box',\n  width: '100%',\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  marginBottom: '30px',\n  '@media (max-width: 799px)': {\n    paddingLeft: '25px'\n  }\n})\n\nexport { FooterRow }\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Li = styled.li({\n  listStyleType: 'none',\n  margin: '10px 0',\n  '@media (max-width: 568px)': {\n    margin: '5px 0'\n  },\n  padding: 0\n})\n\nconst Items = styled.ul({\n  margin: '0 0 5px 0'\n})\n\nconst FooterMenu = ({ title, children, ...props }) => (\n  <div\n    css={{\n      display: 'flex',\n      flexFlow: 'column',\n      fontFamily: 'Roboto Mono, monospace',\n      fontSize: '10pt'\n    }} {...props}\n  >\n    <h3 css={{\n      margin: '0 0 10px 0',\n      color: 'white',\n      fontFamily: 'Roboto Mono, monospace',\n      fontSize: '10pt',\n      fontWeight: 400\n    }}\n    >{title}\n    </h3>\n    <Items>\n      {React.Children.map(children, child => (\n        <Li>{child}</Li>\n      ))}\n    </Items>\n  </div>\n)\n\nexport { FooterMenu }\n","import styled from '@emotion/styled'\n\nconst FooterGraphic = styled.div(({ imageUrl }) => ({\n  marginLeft: 'auto',\n  marginTop: '30px',\n  width: '150px',\n  height: '150px',\n  backgroundImage: `url(${imageUrl})`,\n  backgroundSize: 'auto 100%',\n  backgroundPosition: 'center center',\n  backgroundRepeat: 'no-repeat'\n}))\n\nexport { FooterGraphic }\n","import React from 'react'\nimport Media from 'react-media'\nimport { getImage } from 'src/components/assets'\nimport { MenuLink } from 'src/components/ui-blocks'\n\nimport { FooterRow } from './FooterRow'\nimport { FooterMenu } from './FooterMenu'\nimport { FooterGraphic } from './FooterGraphic'\n\nconst FooterBody = ({ data }) => (\n  <FooterRow>\n    <FooterMenu title='Confluenza'>\n      <MenuLink to='/users/quick-start'>Quick Start</MenuLink>\n      <MenuLink to='/users/using-confluenza'>Using Confluenza</MenuLink>\n      <MenuLink to='/users/mdx'>MDX in Confluenza</MenuLink>\n      <MenuLink to='/developers/making-confluenza-yours'>Making Confluenza Yours</MenuLink>\n      <MenuLink to='/developers/contributing'>Contributing</MenuLink>\n    </FooterMenu>\n    <Media\n      query='(min-width: 800px)' render={() => (\n        <FooterGraphic imageUrl={getImage(data, 'intro-panel')} />\n      )}\n    />\n  </FooterRow>\n)\n\nexport { FooterBody }\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { getImage } from 'src/components/assets'\n\nconst SocialIconsRow = styled.div({\n  width: '140px',\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  // justifyContent: 'space-between',\n  justifyContent: 'flex-start', // @TMP\n  alignItems: 'center',\n  marginBottom: '30px'\n})\n\nconst SocialIcon = ({ imageUrl, ...props }) => (\n  <div\n    css={{\n      margin: 0,\n      marginRight: '15px', // @TMP\n      width: '32px',\n      height: '32px',\n      backgroundImage: `url(${imageUrl})`,\n      backgroundSize: 'auto 100%',\n      backgroundPosition: 'center center',\n      backgroundRepeat: 'no-repeat'\n    }} {...props}\n  />\n)\n\nconst SocialIcons = ({ data }) => (\n  <SocialIconsRow css={{\n    '@media (min-width: 568px)': {\n      alignSelf: 'flex-start'\n    }\n  }}\n  >\n    <a aria-label='twitter' href='https://twitter.com/confluenza1'><SocialIcon imageUrl={getImage(data, 'twitter')} /></a>\n    {/* <a href='https://twitter.com/identity_box'><SocialIcon imageUrl={getImage(data, 'Youtube')} css={{ width: '46px' }} /></a> */}\n    <a aria-label='github' href='https://github.com/confluenza/confluenza'><SocialIcon imageUrl={getImage(data, 'github')} /></a>\n  </SocialIconsRow>\n)\n\nexport { SocialIcons }\n","import React from 'react'\nimport { Row } from 'src/components/ui-blocks'\n\nconst Copyright = () => (\n  <Row>\n    <p css={{\n      color: 'white',\n      fontFamily: 'Roboto Mono, monospace',\n      fontSize: '10pt',\n      margin: 0\n    }}\n    >\n      <span css={{\n        fontSize: '14pt'\n      }}\n      >\n        &copy;\n      </span> 2022 Confluenza\n    </p>\n  </Row>\n)\n\nexport { Copyright }\n","import React from 'react'\nimport { Box } from 'src/components/ui-blocks'\n\nimport { FooterBody } from './FooterBody'\nimport { FooterRow } from './FooterRow'\nimport { SocialIcons } from './SocialIcons'\nimport { Copyright } from './Copyright'\n\nconst Footer = ({ data }) => (\n  <Box backgroundStyles={{\n    paddingBottom: 0,\n    backgroundImage: 'none',\n    backgroundColor: 'black',\n    '@media (max-width: 568px)': {\n      paddingTop: '20px'\n    }\n  }}\n  >\n    <FooterBody data={data} />\n    <FooterRow>\n      <SocialIcons data={data} />\n    </FooterRow>\n    <Copyright />\n  </Box>\n)\n\nexport { Footer }\n","import styled from '@emotion/styled'\n\nconst BoxContentWrapper = styled.div({\n  width: '100%',\n  '@media (min-width: 1050px)': {\n    width: '90%'\n  },\n  '@media (min-width: 1150px)': {\n    width: '80%',\n    maxWidth: '800px'\n  },\n  display: 'flex',\n  flexFlow: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  '@media (min-width: 950px)': {\n    flexFlow: 'row wrap',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n})\n\nconst ContentBox = styled.div({\n  backgroundColor: '#1a548c',\n  '@media (min-width: 800px)': {\n    border: '2px solid #1fe0ba',\n    width: '350px',\n    minWidth: '350px',\n    marginBottom: '50px',\n    borderRadius: '32px',\n    marginTop: '50px',\n    height: '185px'\n  },\n  marginTop: '20px',\n  display: 'flex',\n  flexFlow: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'center'\n})\nconst Title = styled.h2({\n  padding: 0,\n  margin: '15px 0 20px 0',\n  fontFamily: 'Roboto Mono, monospace',\n  fontSize: '20pt',\n  fontWeight: '300',\n  color: '#F57344'\n})\n\nconst Text = styled.p({\n  fontFamily: 'HelveticaNeue-Italic, Helvetica Neue, sans-serif',\n  color: 'white',\n  width: '85%',\n  fontSize: '14pt',\n  textAlign: 'center'\n})\n\nexport { BoxContentWrapper, ContentBox, Title, Text }\n","import React from 'react'\n\nimport { BoxContentWrapper, ContentBox, Title, Text } from './ui'\n\nconst Box1Content = () => (\n  <BoxContentWrapper>\n    <ContentBox css={{ marginBottom: 0 }}>\n      <Title>React</Title>\n      <Text>\n        Use unrestricted ReactJS for maximum flexibility and creativity.\n      </Text>\n    </ContentBox>\n    <ContentBox css={{ marginBottom: 0 }}>\n      <Title>Gatsby</Title>\n      <Text>\n        Take advantage of simplicity of static pages with reach ecosystem of plugins.\n      </Text>\n    </ContentBox>\n    <ContentBox>\n      <Title>Markdown</Title>\n      <Text>\n        Markdown support out of the box with responsive documentation browser.\n      </Text>\n    </ContentBox>\n    <ContentBox>\n      <Title>Monorepos</Title>\n      <Text>\n        Document your monorepo workspaces with markdown and flexible content-grouping.\n      </Text>\n    </ContentBox>\n  </BoxContentWrapper>\n)\n\nexport { Box1Content }\n","import React from 'react'\nimport { Box } from 'src/components/ui-blocks'\n\nimport { Box1Content } from './Box1Content'\n\nconst Box1 = ({ data }) => (\n  <Box backgroundStyles={{\n    backgroundImage: 'none',\n    backgroundColor: '#1a548c'\n  }}\n  >\n    <Box1Content data={data} />\n  </Box>\n)\n\nexport { Box1 }\n","import styled from '@emotion/styled'\n\nconst Title = styled.h2({\n  padding: 0,\n  margin: '35px 0 20px 0',\n  fontFamily: 'Roboto Mono, monospace',\n  fontSize: '18pt',\n  '@media (min-width: 800px)': {\n    fontSize: '24pt'\n  },\n  fontWeight: '500',\n  color: 'black'\n})\n\nconst BoxContentWrapper = styled.div({\n  '@media (min-width: 500px)': {\n    width: '80%'\n  },\n  display: 'flex',\n  flexFlow: 'column',\n  justifyContent: 'center',\n  alignItems: 'center'\n})\n\nexport { BoxContentWrapper, Title }\n","import React from 'react'\nimport { TextBox } from 'src/components/ui-blocks'\n\nimport { BoxContentWrapper, Title } from './ui'\n\nconst Box2Content = ({ data }) => (\n  <BoxContentWrapper>\n    <Title>Why Confluenza?</Title>\n    <TextBox css={{ color: 'black' }}>\n      As software developers we like our documentation to be text-based\n      (so that it is fully versionable), easy to browse through (so that\n      we do not have dive into the actual folder structure), in-place\n      editable (so that everyone is encouraged to improve it), but at\n      the same time we like it to stay as close to the source code as possible.\n      And when we want to build a landing page for our project, we want it to stay\n      close as well. Because we like using React, and we think that monorepos are\n      great even for small projects, we found out that we need a tool that combines\n      the power of React and Markdown in the context of monorepos, so that you can\n      have a uniform, yet fully extensible way of creating documentation-enabled\n      landing pages for our projects. We started with Gatsby, but soon we found\n      out that we can leverage the power of Markdown in the context of monorepos\n      by adding a responsive Markdown documentation browser that is easy to configure\n      and fits well into the common structure of monorepos.\n      This is how Confluenza* is born.\n    </TextBox>\n    <TextBox css={{\n      color: 'black',\n      fontSize: '9pt',\n      textAlign: 'end'\n    }}\n    >\n      <em>*) The origins of the name Confluenza will remain our small secret for now...</em>\n    </TextBox>\n  </BoxContentWrapper>\n)\n\nexport { Box2Content }\n","import React from 'react'\nimport { Box } from 'src/components/ui-blocks'\n\nimport { Box2Content } from './Box2Content'\n\nconst Box2 = ({ data }) => (\n  <Box backgroundStyles={{\n    backgroundImage: 'none',\n    backgroundColor: '#b9cbc7'\n  }}\n  >\n    <Box2Content data={data} />\n  </Box>\n)\n\nexport { Box2 }\n","import styled from '@emotion/styled'\n\nconst Form = styled.form({\n  display: 'flex',\n  flexFlow: 'column nowrap',\n  alignItems: 'flex-start',\n  justifyContent: 'center',\n  width: '100%'\n})\n\nexport { Form }\n","import styled from '@emotion/styled'\n\nconst Button = styled.input(props => ({\n  fontFamily: '\"Roboto Mono\", monospace',\n  fontSize: '0.8em',\n  backgroundColor: 'transparent',\n  color: props.disabled ? 'grey' : 'white',\n  alignSelf: 'center',\n  marginTop: '20px',\n  borderRadius: '10px',\n  borderColor: 'white',\n  outline: 0,\n  opacity: '1.0',\n  boxShadow: 'none',\n  padding: '15px',\n  border: '1px solid white',\n  transition: 'all 0.2s ease-in-out 0s',\n  '&:active': {\n    opacity: '1.0',\n    borderWidth: '3px',\n    borderColor: 'white',\n    border: '1px solid #dddddd'\n  },\n  '&:hover': {\n    filter: props.disabled ? 'none' : 'brightness(85%)'\n  }\n}))\n\nexport { Button }\n","import styled from '@emotion/styled'\n\nconst Textarea = styled.textarea({\n  fontFamily: '\"Roboto Mono\", monospace',\n  width: '100%',\n  height: '300px',\n  backgroundColor: 'black',\n  color: 'white',\n  borderRadius: '20px',\n  border: '1px solid white',\n  padding: '20px',\n  resize: 'none',\n  outlineWidth: 0,\n  transition: 'border-color 0.2s ease-in-out 0s',\n  ':focus': {\n    borderColor: '#0099FF'\n  },\n  '::selection': {\n    backgroundColor: 'white'\n  }\n})\n\nexport { Textarea }\n","import styled from '@emotion/styled'\n\nconst Label = styled.label({\n  fontFamily: '\"Roboto Mono\", monospace',\n  fontSize: '1.0rem',\n  marginBottom: '10px',\n  opacity: '0.5'\n})\n\nexport { Label }\n","import styled from '@emotion/styled'\n\nconst Input = styled.input({\n  fontFamily: '\"Roboto Mono\", monospace',\n  fontSize: '0.8rem',\n  width: '100%',\n  backgroundColor: 'black',\n  color: 'white',\n  borderRadius: '20px',\n  border: '1px solid white',\n  padding: '20px',\n  resize: 'none',\n  outlineWidth: 0,\n  transition: 'border-color 0.2s ease-in-out 0s',\n  ':focus': {\n    borderColor: '#0099FF'\n  },\n  '::selection': {\n    backgroundColor: 'white'\n  }\n})\n\nexport { Input }\n","import styled from '@emotion/styled'\nimport { Link as GatsbyLink } from 'gatsby'\n\nconst Link = styled(GatsbyLink)(props => ({\n  fontFamily: 'Helvetica-Oblique, sans-serif',\n  fontSize: '1.2em',\n  backgroundColor: '#568A80',\n  color: props.disabled ? 'grey' : 'white',\n  marginTop: '20px',\n  marginBottom: '20px',\n  borderRadius: '10px',\n  borderColor: 'white',\n  opacity: '1.0',\n  padding: '10px 25px',\n  border: '1px solid white',\n  transition: 'all 0.2s ease-in-out 0s',\n  '&:hover': {\n    filter: props.disabled ? 'none' : 'brightness(90%)',\n    textDecoration: 'none',\n    color: 'white'\n  }\n}))\n\nexport { Link }\n","import styled from '@emotion/styled'\n\nconst ExternalLink = styled.a(props => ({\n  fontFamily: '\"Roboto Mono\", monospace',\n  fontSize: '0.8em',\n  backgroundColor: 'transparent',\n  color: props.disabled ? 'grey' : 'white',\n  marginTop: '20px',\n  borderRadius: '10px',\n  borderColor: 'white',\n  opacity: '1.0',\n  padding: '15px',\n  border: '1px solid white',\n  transition: 'all 0.2s ease-in-out 0s',\n  '&:hover': {\n    filter: props.disabled ? 'none' : 'brightness(85%)',\n    textDecoration: 'none',\n    border: '1px solid #D20DE7',\n    color: '#D20DE7'\n  }\n}))\n\nexport { ExternalLink }\n","import styled from '@emotion/styled'\n\nconst BoxContentWrapper = styled.div({\n  width: '100%',\n  '@media (min-width: 1300px)': {\n    width: '80%',\n    maxWidth: '800px'\n  },\n  display: 'flex',\n  flexFlow: 'column',\n  justifyContent: 'center',\n  alignItems: 'center'\n})\n\nconst ContentBox = styled.div({\n  marginTop: 0,\n  paddingLeft: '20px',\n  paddingRight: '20px',\n  display: 'flex',\n  flexFlow: 'row wrap',\n  width: '100%',\n  minWidth: '320px',\n  justifyContent: 'space-around',\n  alignItems: 'center',\n  backgroundColor: 'light-grey',\n  borderBottom: '25px solid #f57344',\n  '@media (min-width: 1300px)': {\n    border: '2px solid #f57344',\n    borderRadius: '13px',\n    paddingTop: 0,\n    marginTop: '25px'\n  }\n})\n\nconst Text = styled.p({\n  fontFamily: 'HelveticaNeue-Italic, Helvetica Neue, sans-serif',\n  color: 'black',\n  width: '100%',\n  margin: '0 15px 25px 15px',\n  fontSize: '12pt',\n  '@media (min-width: 700px)': {\n    margin: '15px 0',\n    width: '45%',\n    fontSize: '14pt'\n  },\n  '@media (min-width: 720px)': {\n    margin: '15px 0',\n    width: '55%',\n    fontSize: '14pt'\n  },\n  textAlign: 'left'\n})\n\nconst Img = styled.img({\n  maxWidth: '300px',\n  width: '100%',\n  margin: '20px 0',\n  '@media (min-width: 700px)': {\n    width: '35%',\n    margin: '20px'\n  },\n  '@media (min-width: 1300px)': {\n    width: '43%'\n  }\n})\n\nexport { BoxContentWrapper, ContentBox, Text, Img }\n","import React from 'react'\nimport Media from 'react-media'\n\nimport { getImage } from 'src/components/assets'\nimport { Link } from 'src/components/forms'\n\nimport { BoxContentWrapper, ContentBox, Text, Img } from './ui'\n\nconst Box3Content = ({ data }) => (\n  <BoxContentWrapper>\n    <ContentBox>\n      <Media\n        query='(max-width: 699px)' render={() => (\n          <Img alt='Using React' src={getImage(data, 'use-react')} />\n        )}\n      />\n      <Text>\n        Use React in the way you normally do. You can decide if you\n        want to style the page yourself using unrestricted React or\n        you want to take advantage of our responsive documentation browser.\n        Creativity is yours.\n      </Text>\n      <Media\n        query='(min-width: 700px)' render={() => (\n          <Img alt='Using React' src={getImage(data, 'use-react')} />\n        )}\n      />\n    </ContentBox>\n    <ContentBox>\n      <Img alt='Gatsby Logo' src={getImage(data, 'gatsby-logo')} />\n      <Text>\n        Confluenza is based on Gatsby. No forks, no changes. Everything\n        you can do in Gatsby you can still do in Confluenza. Confluenza\n        elevates support for markdown and monorepos so that you can start\n        documenting your project immediately without having to build\n        everything from scratch.\n      </Text>\n    </ContentBox>\n    <ContentBox>\n      <Media\n        query='(max-width: 699px)' render={() => (\n          <Img alt='MDX Logo' src={getImage(data, 'mdx-logo')} />\n        )}\n      />\n      <Text>\n        Confluenza supports MDX - an authorable format that lets you seamlessly\n        write JSX in your Markdown documents. You can import components, such as\n        interactive charts or alerts, and embed them within your content. This\n        makes writing long-form content with components a blast.\n      </Text>\n      <Media\n        query='(min-width: 700px)' render={() => (\n          <Img alt='MDX Logo' src={getImage(data, 'mdx-logo')} />\n        )}\n      />\n    </ContentBox>\n    <ContentBox>\n      <Img alt='Confluenza Menu' src={getImage(data, 'confluenza-menu')} />\n      <Text>\n        Confluenza can be used to host any markdown or MDX documentation to make\n        it browsable and easily editable. But where it really shines are\n        the monorepos. You just create a dedicated workspace where you put\n        Confluenza (can be your main landing page for your project) and then\n        you can easily refer to any other document in any other workspace in\n        your monorepo. Using frontmatter in your markdown documents you can\n        easily indicate under which category given document should be put in\n        the navigation menu.\n      </Text>\n    </ContentBox>\n    <ContentBox>\n      <Media\n        query='(max-width: 699px)' render={() => (\n          <Img alt='Open Source' src={getImage(data, 'confluenza-open-source')} />\n        )}\n      />\n      <Text>\n        Confluenza is fully Open Source maintained by the developers who actually\n        use it daily. We want Confluenza to become the number one choice for monorepos.\n        Contributions and creative ideas how to get better are welcomed!\n      </Text>\n      <Media\n        query='(min-width: 700px)' render={() => (\n          <Img alt='Open Source' src={getImage(data, 'confluenza-open-source')} />\n        )}\n      />\n    </ContentBox>\n    <Link to='/developers/making-confluenza-yours'>Get started</Link>\n  </BoxContentWrapper>\n)\n\nexport { Box3Content }\n","import React from 'react'\nimport { Box } from 'src/components/ui-blocks'\n\nimport { Box3Content } from './Box3Content'\n\nconst Box3 = ({ data }) => (\n  <Box backgroundStyles={{\n    backgroundImage: 'none',\n    backgroundColor: 'white'\n  }}\n  >\n    <Box3Content data={data} />\n  </Box>\n)\n\nexport { Box3 }\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { graphql } from 'gatsby'\n\nimport { Header } from 'src/components/header'\nimport { IntroPanel } from 'src/components/intro-panel'\nimport { BodyFrame } from 'src/components/ui-blocks'\nimport { Footer } from 'src/content/footer'\n\nimport { Box1, Box2, Box3 } from 'src/content'\n\nconst useUnusualReloader = (location, onReady) => {\n  const [ready, setReady] = useState(false)\n\n  useEffect(() => {\n    setReady(true)\n    onReady && onReady()\n  }, [onReady])\n\n  return ready\n}\n\nconst Home = ({ data, location }) => {\n  console.log('                CONFLUENZA \\n\\n       flexible markdown documentation\\n ')\n\n  const onReady = useCallback(() => {\n    setTimeout(() => {\n      setVisibility('visible')\n    }, 100)\n  }, [])\n\n  const pageReady = useUnusualReloader(location, onReady)\n\n  const [visibility, setVisibility] = useState('hidden')\n\n  if (!pageReady) {\n    return null\n  }\n\n  return (\n    <>\n      <Header data={data} />\n      <BodyFrame css={{ visibility }}>\n        <IntroPanel data={data} />\n        <Box1 />\n        <Box2 data={data} />\n        <Box3 data={data} />\n        <Footer data={data} />\n      </BodyFrame>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile(filter: {relativeDirectory: {regex: \"/homepage/src/(images|assets/Confluenza-assets)/\"}}) {\n      edges {\n        node {\n          publicURL\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => (\n  <>\n    <title>Confluenza</title>\n    <meta name='description' content='Confluenza - flexible Markdown documentation browser' />\n    <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0' />\n    <link href='https://fonts.googleapis.com/css?family=Roboto+Mono&display=swap' rel='stylesheet' />\n  </>\n)\n\nexport default Home\n"],"names":["getImage","data","name","allFile","edges","filter","f","node","publicURL","TextBox","BodyFrame","Row","Box","backgroundStyles","MenuLink","Link","MenuLinkExternal","styles","Logo","LogoImg","LogoText","Menu","HyperWrapper","Wrapper","Header","alt","src","width","color","href","target","rel","Panel","Title","TitleContainer","Subtitle","Img","IntroPanel","panel","useRef","updateSize","window","innerWidth","height","innerHeight","current","style","useEffect","addEventListener","removeEventListener","ref","query","render","FooterRow","Li","Items","FooterMenu","title","children","props","css","React","child","FooterGraphic","marginLeft","marginTop","backgroundImage","imageUrl","backgroundSize","backgroundPosition","backgroundRepeat","FooterBody","to","SocialIconsRow","SocialIcon","margin","marginRight","SocialIcons","Copyright","Footer","paddingBottom","backgroundColor","paddingTop","BoxContentWrapper","ContentBox","Text","Box1Content","Box1","Box2Content","Box2","fontFamily","fontSize","disabled","alignSelf","borderRadius","borderColor","outline","opacity","boxShadow","padding","border","transition","borderWidth","GatsbyLink","marginBottom","textDecoration","Box3Content","Box3","Head","content","location","console","log","pageReady","onReady","useState","ready","setReady","useUnusualReloader","useCallback","setTimeout","setVisibility","visibility"],"sourceRoot":""}