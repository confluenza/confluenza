{"version":3,"sources":["../../source/documentation-layout/DocumentationLayoutMedium.js"],"names":["React","useState","useEffect","Navigation","MenuButton","SiteTitle","MobileNavigation","menuActive","title","docs","location","onStateChanged","deltas","confluenzaConfig","rhythm","position","zIndex","height","minWidth","maxWidth","backgroundColor","WebkitOverflowScrolling","width","background","top","right","display","transition","transform","DocumentationLayoutMedium","children","data","setMenuActive","prevLocation","setPrevLocation","showMenu","currentPathName","pathname","replace","currentHash","hash","currentLocation","site","siteMetadata","navigation","config","nodes","menuButtonBackgroundImage","file","publicURL","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Navigation } from '../navigation'\nimport { MenuButton } from '../navigation/MenuButton'\nimport { SiteTitle } from './SiteTitle'\n\nconst MobileNavigation = ({\n  menuActive,\n  title,\n  docs,\n  location,\n  onStateChanged,\n  deltas,\n  confluenzaConfig,\n  rhythm\n}) => {\n  return (\n    <div css={{\n      position: 'fixed',\n      zIndex: 20,\n      height: `calc(100vh - ${rhythm(3)})`,\n      minWidth: '300px',\n      maxWidth: '300px',\n      '@media (max-width: 568px)': {\n        minWidth: '100vw',\n        maxWidth: '100vw',\n        height: '100vh'\n      },\n      backgroundColor: 'rgba(247, 247, 247, 0.9)',\n      WebkitOverflowScrolling: `touch`,\n      '::-webkit-scrollbar': {\n        width: `6px`,\n        height: `6px`\n      },\n      '::-webkit-scrollbar-thumb': {\n        background: '#ccc'\n      },\n      top: 0,\n      right: '100vw',\n      // height: '100vh',\n      display: 'block',\n      // justifyContent: 'center',\n      // alignItems: 'center',\n      // background: 'white',\n      transition: 'transform 0.2s ease-in-out 0s',\n      transform: menuActive ? 'translate(100%, 0)' : 'none'\n    }}>\n      <SiteTitle title={title} />\n      <Navigation\n        docs={docs}\n        location={location}\n        confluenzaConfig={confluenzaConfig}\n        onStateChanged={onStateChanged}\n        deltas={deltas}\n      />\n    </div>\n  )\n}\n\nconst DocumentationLayoutMedium = ({ children, location, data, onStateChanged, deltas, rhythm }) => {\n  const [menuActive, setMenuActive] = useState(false)\n  const [prevLocation, setPrevLocation] = useState()\n\n  const showMenu = () => {\n    setMenuActive(!menuActive)\n  }\n\n  useEffect(() => {\n    const currentPathName = location.pathname.replace(/\\/$/, '')\n    const currentHash = location.hash\n    const currentLocation = `${currentPathName}${currentHash}`\n    if (prevLocation !== currentLocation) {\n      setPrevLocation(currentLocation)\n      setMenuActive(false)\n    }\n  }, [location])\n\n  const { site: { siteMetadata: { title } }, navigation: { docs }, config: { nodes: confluenzaConfig }, file: { publicURL: menuButtonBackgroundImage } } = data\n  return (\n    <div css={{\n      padding: '1rem'\n    }}>\n      <MobileNavigation\n        menuActive={menuActive}\n        title={title}\n        docs={docs}\n        location={location}\n        onStateChanged={onStateChanged}\n        deltas={deltas}\n        confluenzaConfig={confluenzaConfig}\n        rhythm={rhythm}\n      />\n      <MenuButton onClick={showMenu} backgroundImage={menuButtonBackgroundImage} css={{\n        position: 'fixed',\n        zIndex: 20,\n        bottom: '30px',\n        right: '30px',\n        backgroundColor: menuActive ? '#F486CA' : 'white'\n        // marginBottom: '10px'\n      }} />\n      { children }\n    </div>\n  )\n}\n\nexport { DocumentationLayoutMedium }\n"],"file":"DocumentationLayoutMedium.js"}