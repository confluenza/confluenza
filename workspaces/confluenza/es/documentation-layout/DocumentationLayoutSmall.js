import _css from "@emotion/css";

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import React, { useState, useEffect } from 'react';
import { DocumentationLayoutGrid, SidebarGridItem, ContentGridItem } from './DocumentationLayoutGrid';
import { Navigation } from '../navigation';
import { MenuButton } from '../navigation/MenuButton';
import { SiteTitle } from './SiteTitle';
import { FixedNavigation } from './FixedNavigation';
import { useScrollResoration } from './useScrollRestoration';
import { useMobileDocumentNavigator } from './useMobileDocumentNavigator';
import { jsx as ___EmotionJSX } from "@emotion/core";

var DocumentationLayoutSmall = function DocumentationLayoutSmall(_ref) {
  var children = _ref.children,
      location = _ref.location,
      data = _ref.data,
      onStateChanged = _ref.onStateChanged,
      deltas = _ref.deltas;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      menuActive = _useState2[0],
      setMenuActive = _useState2[1];

  var _useState3 = useState('relative'),
      _useState4 = _slicedToArray(_useState3, 2),
      position = _useState4[0],
      setPosition = _useState4[1];

  var _useState5 = useState('300px 100vw'),
      _useState6 = _slicedToArray(_useState5, 2),
      grid = _useState6[0],
      setGrid = _useState6[1];

  var _useState7 = useState(0),
      _useState8 = _slicedToArray(_useState7, 2),
      animationDelay = _useState8[0],
      setAnimationDelay = _useState8[1];

  var _useScrollResoration = useScrollResoration(),
      recordScrollPosition = _useScrollResoration.recordScrollPosition,
      restoreScrollPosition = _useScrollResoration.restoreScrollPosition,
      disableScrollRestoration = _useScrollResoration.disableScrollRestoration;

  var closeMenu = function closeMenu() {
    setMenuActive(false); // we will be hiding menu - thus, we need to make sure that
    // document container is again scrollable before we see it

    setPosition('relative');
    setGrid('300px 100vw');
  }; // toggleMenu is used to trigger opening menu, and one of
  // the two triggers to close it (the second closing trigger
  // is user selecting navigation item). Opening and closing
  // menu is finalized in the effect below that responds to
  // the menuActive change.


  var toggleMenu = function toggleMenu() {
    if (menuActive) {
      closeMenu();
    } else {
      setMenuActive(true); // record scroll position so that we can restore it if needed

      recordScrollPosition();
    }

    setAnimationDelay(0);
  }; // This hook responds to the change of location: the user
  // selected a link in the navigation menu.


  useMobileDocumentNavigator({
    onNewPathSelected: function onNewPathSelected() {
      closeMenu();
      disableScrollRestoration();
      setAnimationDelay(0.3);
    },
    location: location
  }, [location]);
  useEffect(function () {
    if (menuActive) {
      // We do not want to change to 'position: fixed' immediately as
      // this may be visible and create unpleasant visual effect.
      // The timeout is about the same as the transition duration in CSS.
      setTimeout(function () {
        setPosition('fixed');
        setGrid('100vw 100vw');
      }, 200);
    } else {
      // Restoring scroll position can only be effective
      // after position is set back to 'relative'
      // We have two cases: (1) closing menu is the explicit user
      // action (by pressing the "toggle menu" button) or (2) as
      // a result of changing location (user selected a new menu item).
      // In both cases we use the closeMenu function above to trigger
      // the closing process. We could not restore the scroll possition
      // right there as this would be too early - the changing from
      // 'position: fixed' to 'position: relative' needs to be effective
      // before we can change the scroll position.
      restoreScrollPosition();
    }
  }, [menuActive]);
  var title = data.site.siteMetadata.title,
      docs = data.navigation.docs,
      menuButtonBackgroundImage = data.file.publicURL;
  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(DocumentationLayoutGrid, {
    css:
    /*#__PURE__*/
    _css({
      position: position,
      height: '100vh',
      left: menuActive ? 0 : '-300px',
      margin: 0,
      gridGap: 0,
      gridTemplateColumns: grid,
      transition: "all .2s ease-in-out ".concat(animationDelay, "s")
    }, ";label:DocumentationLayoutSmall;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9kb2N1bWVudGF0aW9uLWxheW91dC9Eb2N1bWVudGF0aW9uTGF5b3V0U21hbGwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUY2QiIsImZpbGUiOiIuLi8uLi9zb3VyY2UvZG9jdW1lbnRhdGlvbi1sYXlvdXQvRG9jdW1lbnRhdGlvbkxheW91dFNtYWxsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgRG9jdW1lbnRhdGlvbkxheW91dEdyaWQsIFNpZGViYXJHcmlkSXRlbSwgQ29udGVudEdyaWRJdGVtIH0gZnJvbSAnLi9Eb2N1bWVudGF0aW9uTGF5b3V0R3JpZCdcbmltcG9ydCB7IE5hdmlnYXRpb24gfSBmcm9tICcuLi9uYXZpZ2F0aW9uJ1xuaW1wb3J0IHsgTWVudUJ1dHRvbiB9IGZyb20gJy4uL25hdmlnYXRpb24vTWVudUJ1dHRvbidcbmltcG9ydCB7IFNpdGVUaXRsZSB9IGZyb20gJy4vU2l0ZVRpdGxlJ1xuXG5pbXBvcnQgeyBGaXhlZE5hdmlnYXRpb24gfSBmcm9tICcuL0ZpeGVkTmF2aWdhdGlvbidcblxuaW1wb3J0IHsgdXNlU2Nyb2xsUmVzb3JhdGlvbiB9IGZyb20gJy4vdXNlU2Nyb2xsUmVzdG9yYXRpb24nXG5pbXBvcnQgeyB1c2VNb2JpbGVEb2N1bWVudE5hdmlnYXRvciB9IGZyb20gJy4vdXNlTW9iaWxlRG9jdW1lbnROYXZpZ2F0b3InXG5cbmNvbnN0IERvY3VtZW50YXRpb25MYXlvdXRTbWFsbCA9ICh7IGNoaWxkcmVuLCBsb2NhdGlvbiwgZGF0YSwgb25TdGF0ZUNoYW5nZWQsIGRlbHRhcyB9KSA9PiB7XG4gIGNvbnN0IFttZW51QWN0aXZlLCBzZXRNZW51QWN0aXZlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbcG9zaXRpb24sIHNldFBvc2l0aW9uXSA9IHVzZVN0YXRlKCdyZWxhdGl2ZScpXG4gIGNvbnN0IFtncmlkLCBzZXRHcmlkXSA9IHVzZVN0YXRlKCczMDBweCAxMDB2dycpXG4gIGNvbnN0IFthbmltYXRpb25EZWxheSwgc2V0QW5pbWF0aW9uRGVsYXldID0gdXNlU3RhdGUoMClcblxuICBjb25zdCB7XG4gICAgcmVjb3JkU2Nyb2xsUG9zaXRpb24sXG4gICAgcmVzdG9yZVNjcm9sbFBvc2l0aW9uLFxuICAgIGRpc2FibGVTY3JvbGxSZXN0b3JhdGlvblxuICB9ID0gdXNlU2Nyb2xsUmVzb3JhdGlvbigpXG5cbiAgY29uc3QgY2xvc2VNZW51ID0gKCkgPT4ge1xuICAgIHNldE1lbnVBY3RpdmUoZmFsc2UpXG4gICAgLy8gd2Ugd2lsbCBiZSBoaWRpbmcgbWVudSAtIHRodXMsIHdlIG5lZWQgdG8gbWFrZSBzdXJlIHRoYXRcbiAgICAvLyBkb2N1bWVudCBjb250YWluZXIgaXMgYWdhaW4gc2Nyb2xsYWJsZSBiZWZvcmUgd2Ugc2VlIGl0XG4gICAgc2V0UG9zaXRpb24oJ3JlbGF0aXZlJylcbiAgICBzZXRHcmlkKCczMDBweCAxMDB2dycpXG4gIH1cblxuICAvLyB0b2dnbGVNZW51IGlzIHVzZWQgdG8gdHJpZ2dlciBvcGVuaW5nIG1lbnUsIGFuZCBvbmUgb2ZcbiAgLy8gdGhlIHR3byB0cmlnZ2VycyB0byBjbG9zZSBpdCAodGhlIHNlY29uZCBjbG9zaW5nIHRyaWdnZXJcbiAgLy8gaXMgdXNlciBzZWxlY3RpbmcgbmF2aWdhdGlvbiBpdGVtKS4gT3BlbmluZyBhbmQgY2xvc2luZ1xuICAvLyBtZW51IGlzIGZpbmFsaXplZCBpbiB0aGUgZWZmZWN0IGJlbG93IHRoYXQgcmVzcG9uZHMgdG9cbiAgLy8gdGhlIG1lbnVBY3RpdmUgY2hhbmdlLlxuICBjb25zdCB0b2dnbGVNZW51ID0gKCkgPT4ge1xuICAgIGlmIChtZW51QWN0aXZlKSB7XG4gICAgICBjbG9zZU1lbnUoKVxuICAgIH0gZWxzZSB7XG4gICAgICBzZXRNZW51QWN0aXZlKHRydWUpXG4gICAgICAvLyByZWNvcmQgc2Nyb2xsIHBvc2l0aW9uIHNvIHRoYXQgd2UgY2FuIHJlc3RvcmUgaXQgaWYgbmVlZGVkXG4gICAgICByZWNvcmRTY3JvbGxQb3NpdGlvbigpXG4gICAgfVxuICAgIHNldEFuaW1hdGlvbkRlbGF5KDApXG4gIH1cblxuICAvLyBUaGlzIGhvb2sgcmVzcG9uZHMgdG8gdGhlIGNoYW5nZSBvZiBsb2NhdGlvbjogdGhlIHVzZXJcbiAgLy8gc2VsZWN0ZWQgYSBsaW5rIGluIHRoZSBuYXZpZ2F0aW9uIG1lbnUuXG4gIHVzZU1vYmlsZURvY3VtZW50TmF2aWdhdG9yKHtcbiAgICBvbk5ld1BhdGhTZWxlY3RlZDogKCkgPT4ge1xuICAgICAgY2xvc2VNZW51KClcbiAgICAgIGRpc2FibGVTY3JvbGxSZXN0b3JhdGlvbigpXG4gICAgICBzZXRBbmltYXRpb25EZWxheSgwLjMpXG4gICAgfSxcbiAgICBsb2NhdGlvblxuICB9LCBbbG9jYXRpb25dKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG1lbnVBY3RpdmUpIHtcbiAgICAgIC8vIFdlIGRvIG5vdCB3YW50IHRvIGNoYW5nZSB0byAncG9zaXRpb246IGZpeGVkJyBpbW1lZGlhdGVseSBhc1xuICAgICAgLy8gdGhpcyBtYXkgYmUgdmlzaWJsZSBhbmQgY3JlYXRlIHVucGxlYXNhbnQgdmlzdWFsIGVmZmVjdC5cbiAgICAgIC8vIFRoZSB0aW1lb3V0IGlzIGFib3V0IHRoZSBzYW1lIGFzIHRoZSB0cmFuc2l0aW9uIGR1cmF0aW9uIGluIENTUy5cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzZXRQb3NpdGlvbignZml4ZWQnKVxuICAgICAgICBzZXRHcmlkKCcxMDB2dyAxMDB2dycpXG4gICAgICB9LCAyMDApXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlc3RvcmluZyBzY3JvbGwgcG9zaXRpb24gY2FuIG9ubHkgYmUgZWZmZWN0aXZlXG4gICAgICAvLyBhZnRlciBwb3NpdGlvbiBpcyBzZXQgYmFjayB0byAncmVsYXRpdmUnXG4gICAgICAvLyBXZSBoYXZlIHR3byBjYXNlczogKDEpIGNsb3NpbmcgbWVudSBpcyB0aGUgZXhwbGljaXQgdXNlclxuICAgICAgLy8gYWN0aW9uIChieSBwcmVzc2luZyB0aGUgXCJ0b2dnbGUgbWVudVwiIGJ1dHRvbikgb3IgKDIpIGFzXG4gICAgICAvLyBhIHJlc3VsdCBvZiBjaGFuZ2luZyBsb2NhdGlvbiAodXNlciBzZWxlY3RlZCBhIG5ldyBtZW51IGl0ZW0pLlxuICAgICAgLy8gSW4gYm90aCBjYXNlcyB3ZSB1c2UgdGhlIGNsb3NlTWVudSBmdW5jdGlvbiBhYm92ZSB0byB0cmlnZ2VyXG4gICAgICAvLyB0aGUgY2xvc2luZyBwcm9jZXNzLiBXZSBjb3VsZCBub3QgcmVzdG9yZSB0aGUgc2Nyb2xsIHBvc3NpdGlvblxuICAgICAgLy8gcmlnaHQgdGhlcmUgYXMgdGhpcyB3b3VsZCBiZSB0b28gZWFybHkgLSB0aGUgY2hhbmdpbmcgZnJvbVxuICAgICAgLy8gJ3Bvc2l0aW9uOiBmaXhlZCcgdG8gJ3Bvc2l0aW9uOiByZWxhdGl2ZScgbmVlZHMgdG8gYmUgZWZmZWN0aXZlXG4gICAgICAvLyBiZWZvcmUgd2UgY2FuIGNoYW5nZSB0aGUgc2Nyb2xsIHBvc2l0aW9uLlxuICAgICAgcmVzdG9yZVNjcm9sbFBvc2l0aW9uKClcbiAgICB9XG4gIH0sIFttZW51QWN0aXZlXSlcblxuICBjb25zdCB7IHNpdGU6IHsgc2l0ZU1ldGFkYXRhOiB7IHRpdGxlIH0gfSwgbmF2aWdhdGlvbjogeyBkb2NzIH0sIGZpbGU6IHsgcHVibGljVVJMOiBtZW51QnV0dG9uQmFja2dyb3VuZEltYWdlIH0gfSA9IGRhdGFcbiAgcmV0dXJuICg8PlxuICAgIDxEb2N1bWVudGF0aW9uTGF5b3V0R3JpZCBjc3M9e3tcbiAgICAgIHBvc2l0aW9uLFxuICAgICAgaGVpZ2h0OiAnMTAwdmgnLFxuICAgICAgbGVmdDogbWVudUFjdGl2ZSA/IDAgOiAnLTMwMHB4JyxcbiAgICAgIG1hcmdpbjogMCxcbiAgICAgIGdyaWRHYXA6IDAsXG4gICAgICBncmlkVGVtcGxhdGVDb2x1bW5zOiBncmlkLFxuICAgICAgdHJhbnNpdGlvbjogYGFsbCAuMnMgZWFzZS1pbi1vdXQgJHthbmltYXRpb25EZWxheX1zYFxuICAgIH19PlxuICAgICAgPFNpZGViYXJHcmlkSXRlbT5cbiAgICAgICAgPEZpeGVkTmF2aWdhdGlvbiBjc3M9e3tcbiAgICAgICAgICBtaW5XaWR0aDogbWVudUFjdGl2ZSA/ICcxMDB2dycgOiAnMzAwcHgnLFxuICAgICAgICAgIG1heFdpZHRoOiBtZW51QWN0aXZlID8gJzEwMHZ3JyA6ICczMDBweCcsXG4gICAgICAgICAgdHJhbnNpdGlvbjogYGFsbCAuMnMgZWFzZS1pbi1vdXQgJHthbmltYXRpb25EZWxheX1zYCxcbiAgICAgICAgICBoZWlnaHQ6ICcxMDB2aCdcbiAgICAgICAgfX0+XG4gICAgICAgICAgPFNpdGVUaXRsZSB0aXRsZT17dGl0bGV9IC8+XG4gICAgICAgICAgPE5hdmlnYXRpb24gZG9jcz17ZG9jc30gbG9jYXRpb249e2xvY2F0aW9ufSBvblN0YXRlQ2hhbmdlZD17b25TdGF0ZUNoYW5nZWR9IGRlbHRhcz17ZGVsdGFzfSAvPlxuICAgICAgICA8L0ZpeGVkTmF2aWdhdGlvbj5cbiAgICAgIDwvU2lkZWJhckdyaWRJdGVtPlxuICAgICAgPENvbnRlbnRHcmlkSXRlbT5cbiAgICAgICAgeyBjaGlsZHJlbiB9XG4gICAgICA8L0NvbnRlbnRHcmlkSXRlbT5cbiAgICA8L0RvY3VtZW50YXRpb25MYXlvdXRHcmlkPlxuICAgIDxNZW51QnV0dG9uIG9uQ2xpY2s9e3RvZ2dsZU1lbnV9IGJhY2tncm91bmRJbWFnZT17bWVudUJ1dHRvbkJhY2tncm91bmRJbWFnZX0gY3NzPXt7XG4gICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgIHpJbmRleDogMjAsXG4gICAgICBib3R0b206ICczMHB4JyxcbiAgICAgIHJpZ2h0OiAnMzBweCcsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IG1lbnVBY3RpdmUgPyAnI0Y0ODZDQScgOiAnd2hpdGUnXG4gICAgfX0gLz5cbiAgPC8+XG4gIClcbn1cblxuZXhwb3J0IHsgRG9jdW1lbnRhdGlvbkxheW91dFNtYWxsIH1cbiJdfQ== */"))
  }, ___EmotionJSX(SidebarGridItem, null, ___EmotionJSX(FixedNavigation, {
    css:
    /*#__PURE__*/
    _css({
      minWidth: menuActive ? '100vw' : '300px',
      maxWidth: menuActive ? '100vw' : '300px',
      transition: "all .2s ease-in-out ".concat(animationDelay, "s"),
      height: '100vh'
    }, ";label:DocumentationLayoutSmall;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9kb2N1bWVudGF0aW9uLWxheW91dC9Eb2N1bWVudGF0aW9uTGF5b3V0U21hbGwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0Z5QiIsImZpbGUiOiIuLi8uLi9zb3VyY2UvZG9jdW1lbnRhdGlvbi1sYXlvdXQvRG9jdW1lbnRhdGlvbkxheW91dFNtYWxsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgRG9jdW1lbnRhdGlvbkxheW91dEdyaWQsIFNpZGViYXJHcmlkSXRlbSwgQ29udGVudEdyaWRJdGVtIH0gZnJvbSAnLi9Eb2N1bWVudGF0aW9uTGF5b3V0R3JpZCdcbmltcG9ydCB7IE5hdmlnYXRpb24gfSBmcm9tICcuLi9uYXZpZ2F0aW9uJ1xuaW1wb3J0IHsgTWVudUJ1dHRvbiB9IGZyb20gJy4uL25hdmlnYXRpb24vTWVudUJ1dHRvbidcbmltcG9ydCB7IFNpdGVUaXRsZSB9IGZyb20gJy4vU2l0ZVRpdGxlJ1xuXG5pbXBvcnQgeyBGaXhlZE5hdmlnYXRpb24gfSBmcm9tICcuL0ZpeGVkTmF2aWdhdGlvbidcblxuaW1wb3J0IHsgdXNlU2Nyb2xsUmVzb3JhdGlvbiB9IGZyb20gJy4vdXNlU2Nyb2xsUmVzdG9yYXRpb24nXG5pbXBvcnQgeyB1c2VNb2JpbGVEb2N1bWVudE5hdmlnYXRvciB9IGZyb20gJy4vdXNlTW9iaWxlRG9jdW1lbnROYXZpZ2F0b3InXG5cbmNvbnN0IERvY3VtZW50YXRpb25MYXlvdXRTbWFsbCA9ICh7IGNoaWxkcmVuLCBsb2NhdGlvbiwgZGF0YSwgb25TdGF0ZUNoYW5nZWQsIGRlbHRhcyB9KSA9PiB7XG4gIGNvbnN0IFttZW51QWN0aXZlLCBzZXRNZW51QWN0aXZlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbcG9zaXRpb24sIHNldFBvc2l0aW9uXSA9IHVzZVN0YXRlKCdyZWxhdGl2ZScpXG4gIGNvbnN0IFtncmlkLCBzZXRHcmlkXSA9IHVzZVN0YXRlKCczMDBweCAxMDB2dycpXG4gIGNvbnN0IFthbmltYXRpb25EZWxheSwgc2V0QW5pbWF0aW9uRGVsYXldID0gdXNlU3RhdGUoMClcblxuICBjb25zdCB7XG4gICAgcmVjb3JkU2Nyb2xsUG9zaXRpb24sXG4gICAgcmVzdG9yZVNjcm9sbFBvc2l0aW9uLFxuICAgIGRpc2FibGVTY3JvbGxSZXN0b3JhdGlvblxuICB9ID0gdXNlU2Nyb2xsUmVzb3JhdGlvbigpXG5cbiAgY29uc3QgY2xvc2VNZW51ID0gKCkgPT4ge1xuICAgIHNldE1lbnVBY3RpdmUoZmFsc2UpXG4gICAgLy8gd2Ugd2lsbCBiZSBoaWRpbmcgbWVudSAtIHRodXMsIHdlIG5lZWQgdG8gbWFrZSBzdXJlIHRoYXRcbiAgICAvLyBkb2N1bWVudCBjb250YWluZXIgaXMgYWdhaW4gc2Nyb2xsYWJsZSBiZWZvcmUgd2Ugc2VlIGl0XG4gICAgc2V0UG9zaXRpb24oJ3JlbGF0aXZlJylcbiAgICBzZXRHcmlkKCczMDBweCAxMDB2dycpXG4gIH1cblxuICAvLyB0b2dnbGVNZW51IGlzIHVzZWQgdG8gdHJpZ2dlciBvcGVuaW5nIG1lbnUsIGFuZCBvbmUgb2ZcbiAgLy8gdGhlIHR3byB0cmlnZ2VycyB0byBjbG9zZSBpdCAodGhlIHNlY29uZCBjbG9zaW5nIHRyaWdnZXJcbiAgLy8gaXMgdXNlciBzZWxlY3RpbmcgbmF2aWdhdGlvbiBpdGVtKS4gT3BlbmluZyBhbmQgY2xvc2luZ1xuICAvLyBtZW51IGlzIGZpbmFsaXplZCBpbiB0aGUgZWZmZWN0IGJlbG93IHRoYXQgcmVzcG9uZHMgdG9cbiAgLy8gdGhlIG1lbnVBY3RpdmUgY2hhbmdlLlxuICBjb25zdCB0b2dnbGVNZW51ID0gKCkgPT4ge1xuICAgIGlmIChtZW51QWN0aXZlKSB7XG4gICAgICBjbG9zZU1lbnUoKVxuICAgIH0gZWxzZSB7XG4gICAgICBzZXRNZW51QWN0aXZlKHRydWUpXG4gICAgICAvLyByZWNvcmQgc2Nyb2xsIHBvc2l0aW9uIHNvIHRoYXQgd2UgY2FuIHJlc3RvcmUgaXQgaWYgbmVlZGVkXG4gICAgICByZWNvcmRTY3JvbGxQb3NpdGlvbigpXG4gICAgfVxuICAgIHNldEFuaW1hdGlvbkRlbGF5KDApXG4gIH1cblxuICAvLyBUaGlzIGhvb2sgcmVzcG9uZHMgdG8gdGhlIGNoYW5nZSBvZiBsb2NhdGlvbjogdGhlIHVzZXJcbiAgLy8gc2VsZWN0ZWQgYSBsaW5rIGluIHRoZSBuYXZpZ2F0aW9uIG1lbnUuXG4gIHVzZU1vYmlsZURvY3VtZW50TmF2aWdhdG9yKHtcbiAgICBvbk5ld1BhdGhTZWxlY3RlZDogKCkgPT4ge1xuICAgICAgY2xvc2VNZW51KClcbiAgICAgIGRpc2FibGVTY3JvbGxSZXN0b3JhdGlvbigpXG4gICAgICBzZXRBbmltYXRpb25EZWxheSgwLjMpXG4gICAgfSxcbiAgICBsb2NhdGlvblxuICB9LCBbbG9jYXRpb25dKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG1lbnVBY3RpdmUpIHtcbiAgICAgIC8vIFdlIGRvIG5vdCB3YW50IHRvIGNoYW5nZSB0byAncG9zaXRpb246IGZpeGVkJyBpbW1lZGlhdGVseSBhc1xuICAgICAgLy8gdGhpcyBtYXkgYmUgdmlzaWJsZSBhbmQgY3JlYXRlIHVucGxlYXNhbnQgdmlzdWFsIGVmZmVjdC5cbiAgICAgIC8vIFRoZSB0aW1lb3V0IGlzIGFib3V0IHRoZSBzYW1lIGFzIHRoZSB0cmFuc2l0aW9uIGR1cmF0aW9uIGluIENTUy5cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzZXRQb3NpdGlvbignZml4ZWQnKVxuICAgICAgICBzZXRHcmlkKCcxMDB2dyAxMDB2dycpXG4gICAgICB9LCAyMDApXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlc3RvcmluZyBzY3JvbGwgcG9zaXRpb24gY2FuIG9ubHkgYmUgZWZmZWN0aXZlXG4gICAgICAvLyBhZnRlciBwb3NpdGlvbiBpcyBzZXQgYmFjayB0byAncmVsYXRpdmUnXG4gICAgICAvLyBXZSBoYXZlIHR3byBjYXNlczogKDEpIGNsb3NpbmcgbWVudSBpcyB0aGUgZXhwbGljaXQgdXNlclxuICAgICAgLy8gYWN0aW9uIChieSBwcmVzc2luZyB0aGUgXCJ0b2dnbGUgbWVudVwiIGJ1dHRvbikgb3IgKDIpIGFzXG4gICAgICAvLyBhIHJlc3VsdCBvZiBjaGFuZ2luZyBsb2NhdGlvbiAodXNlciBzZWxlY3RlZCBhIG5ldyBtZW51IGl0ZW0pLlxuICAgICAgLy8gSW4gYm90aCBjYXNlcyB3ZSB1c2UgdGhlIGNsb3NlTWVudSBmdW5jdGlvbiBhYm92ZSB0byB0cmlnZ2VyXG4gICAgICAvLyB0aGUgY2xvc2luZyBwcm9jZXNzLiBXZSBjb3VsZCBub3QgcmVzdG9yZSB0aGUgc2Nyb2xsIHBvc3NpdGlvblxuICAgICAgLy8gcmlnaHQgdGhlcmUgYXMgdGhpcyB3b3VsZCBiZSB0b28gZWFybHkgLSB0aGUgY2hhbmdpbmcgZnJvbVxuICAgICAgLy8gJ3Bvc2l0aW9uOiBmaXhlZCcgdG8gJ3Bvc2l0aW9uOiByZWxhdGl2ZScgbmVlZHMgdG8gYmUgZWZmZWN0aXZlXG4gICAgICAvLyBiZWZvcmUgd2UgY2FuIGNoYW5nZSB0aGUgc2Nyb2xsIHBvc2l0aW9uLlxuICAgICAgcmVzdG9yZVNjcm9sbFBvc2l0aW9uKClcbiAgICB9XG4gIH0sIFttZW51QWN0aXZlXSlcblxuICBjb25zdCB7IHNpdGU6IHsgc2l0ZU1ldGFkYXRhOiB7IHRpdGxlIH0gfSwgbmF2aWdhdGlvbjogeyBkb2NzIH0sIGZpbGU6IHsgcHVibGljVVJMOiBtZW51QnV0dG9uQmFja2dyb3VuZEltYWdlIH0gfSA9IGRhdGFcbiAgcmV0dXJuICg8PlxuICAgIDxEb2N1bWVudGF0aW9uTGF5b3V0R3JpZCBjc3M9e3tcbiAgICAgIHBvc2l0aW9uLFxuICAgICAgaGVpZ2h0OiAnMTAwdmgnLFxuICAgICAgbGVmdDogbWVudUFjdGl2ZSA/IDAgOiAnLTMwMHB4JyxcbiAgICAgIG1hcmdpbjogMCxcbiAgICAgIGdyaWRHYXA6IDAsXG4gICAgICBncmlkVGVtcGxhdGVDb2x1bW5zOiBncmlkLFxuICAgICAgdHJhbnNpdGlvbjogYGFsbCAuMnMgZWFzZS1pbi1vdXQgJHthbmltYXRpb25EZWxheX1zYFxuICAgIH19PlxuICAgICAgPFNpZGViYXJHcmlkSXRlbT5cbiAgICAgICAgPEZpeGVkTmF2aWdhdGlvbiBjc3M9e3tcbiAgICAgICAgICBtaW5XaWR0aDogbWVudUFjdGl2ZSA/ICcxMDB2dycgOiAnMzAwcHgnLFxuICAgICAgICAgIG1heFdpZHRoOiBtZW51QWN0aXZlID8gJzEwMHZ3JyA6ICczMDBweCcsXG4gICAgICAgICAgdHJhbnNpdGlvbjogYGFsbCAuMnMgZWFzZS1pbi1vdXQgJHthbmltYXRpb25EZWxheX1zYCxcbiAgICAgICAgICBoZWlnaHQ6ICcxMDB2aCdcbiAgICAgICAgfX0+XG4gICAgICAgICAgPFNpdGVUaXRsZSB0aXRsZT17dGl0bGV9IC8+XG4gICAgICAgICAgPE5hdmlnYXRpb24gZG9jcz17ZG9jc30gbG9jYXRpb249e2xvY2F0aW9ufSBvblN0YXRlQ2hhbmdlZD17b25TdGF0ZUNoYW5nZWR9IGRlbHRhcz17ZGVsdGFzfSAvPlxuICAgICAgICA8L0ZpeGVkTmF2aWdhdGlvbj5cbiAgICAgIDwvU2lkZWJhckdyaWRJdGVtPlxuICAgICAgPENvbnRlbnRHcmlkSXRlbT5cbiAgICAgICAgeyBjaGlsZHJlbiB9XG4gICAgICA8L0NvbnRlbnRHcmlkSXRlbT5cbiAgICA8L0RvY3VtZW50YXRpb25MYXlvdXRHcmlkPlxuICAgIDxNZW51QnV0dG9uIG9uQ2xpY2s9e3RvZ2dsZU1lbnV9IGJhY2tncm91bmRJbWFnZT17bWVudUJ1dHRvbkJhY2tncm91bmRJbWFnZX0gY3NzPXt7XG4gICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgIHpJbmRleDogMjAsXG4gICAgICBib3R0b206ICczMHB4JyxcbiAgICAgIHJpZ2h0OiAnMzBweCcsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IG1lbnVBY3RpdmUgPyAnI0Y0ODZDQScgOiAnd2hpdGUnXG4gICAgfX0gLz5cbiAgPC8+XG4gIClcbn1cblxuZXhwb3J0IHsgRG9jdW1lbnRhdGlvbkxheW91dFNtYWxsIH1cbiJdfQ== */"))
  }, ___EmotionJSX(SiteTitle, {
    title: title
  }), ___EmotionJSX(Navigation, {
    docs: docs,
    location: location,
    onStateChanged: onStateChanged,
    deltas: deltas
  }))), ___EmotionJSX(ContentGridItem, null, children)), ___EmotionJSX(MenuButton, {
    onClick: toggleMenu,
    backgroundImage: menuButtonBackgroundImage,
    css:
    /*#__PURE__*/
    _css({
      position: 'fixed',
      zIndex: 20,
      bottom: '30px',
      right: '30px',
      backgroundColor: menuActive ? '#F486CA' : 'white'
    }, ";label:DocumentationLayoutSmall;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9kb2N1bWVudGF0aW9uLWxheW91dC9Eb2N1bWVudGF0aW9uTGF5b3V0U21hbGwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkdpRiIsImZpbGUiOiIuLi8uLi9zb3VyY2UvZG9jdW1lbnRhdGlvbi1sYXlvdXQvRG9jdW1lbnRhdGlvbkxheW91dFNtYWxsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgRG9jdW1lbnRhdGlvbkxheW91dEdyaWQsIFNpZGViYXJHcmlkSXRlbSwgQ29udGVudEdyaWRJdGVtIH0gZnJvbSAnLi9Eb2N1bWVudGF0aW9uTGF5b3V0R3JpZCdcbmltcG9ydCB7IE5hdmlnYXRpb24gfSBmcm9tICcuLi9uYXZpZ2F0aW9uJ1xuaW1wb3J0IHsgTWVudUJ1dHRvbiB9IGZyb20gJy4uL25hdmlnYXRpb24vTWVudUJ1dHRvbidcbmltcG9ydCB7IFNpdGVUaXRsZSB9IGZyb20gJy4vU2l0ZVRpdGxlJ1xuXG5pbXBvcnQgeyBGaXhlZE5hdmlnYXRpb24gfSBmcm9tICcuL0ZpeGVkTmF2aWdhdGlvbidcblxuaW1wb3J0IHsgdXNlU2Nyb2xsUmVzb3JhdGlvbiB9IGZyb20gJy4vdXNlU2Nyb2xsUmVzdG9yYXRpb24nXG5pbXBvcnQgeyB1c2VNb2JpbGVEb2N1bWVudE5hdmlnYXRvciB9IGZyb20gJy4vdXNlTW9iaWxlRG9jdW1lbnROYXZpZ2F0b3InXG5cbmNvbnN0IERvY3VtZW50YXRpb25MYXlvdXRTbWFsbCA9ICh7IGNoaWxkcmVuLCBsb2NhdGlvbiwgZGF0YSwgb25TdGF0ZUNoYW5nZWQsIGRlbHRhcyB9KSA9PiB7XG4gIGNvbnN0IFttZW51QWN0aXZlLCBzZXRNZW51QWN0aXZlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbcG9zaXRpb24sIHNldFBvc2l0aW9uXSA9IHVzZVN0YXRlKCdyZWxhdGl2ZScpXG4gIGNvbnN0IFtncmlkLCBzZXRHcmlkXSA9IHVzZVN0YXRlKCczMDBweCAxMDB2dycpXG4gIGNvbnN0IFthbmltYXRpb25EZWxheSwgc2V0QW5pbWF0aW9uRGVsYXldID0gdXNlU3RhdGUoMClcblxuICBjb25zdCB7XG4gICAgcmVjb3JkU2Nyb2xsUG9zaXRpb24sXG4gICAgcmVzdG9yZVNjcm9sbFBvc2l0aW9uLFxuICAgIGRpc2FibGVTY3JvbGxSZXN0b3JhdGlvblxuICB9ID0gdXNlU2Nyb2xsUmVzb3JhdGlvbigpXG5cbiAgY29uc3QgY2xvc2VNZW51ID0gKCkgPT4ge1xuICAgIHNldE1lbnVBY3RpdmUoZmFsc2UpXG4gICAgLy8gd2Ugd2lsbCBiZSBoaWRpbmcgbWVudSAtIHRodXMsIHdlIG5lZWQgdG8gbWFrZSBzdXJlIHRoYXRcbiAgICAvLyBkb2N1bWVudCBjb250YWluZXIgaXMgYWdhaW4gc2Nyb2xsYWJsZSBiZWZvcmUgd2Ugc2VlIGl0XG4gICAgc2V0UG9zaXRpb24oJ3JlbGF0aXZlJylcbiAgICBzZXRHcmlkKCczMDBweCAxMDB2dycpXG4gIH1cblxuICAvLyB0b2dnbGVNZW51IGlzIHVzZWQgdG8gdHJpZ2dlciBvcGVuaW5nIG1lbnUsIGFuZCBvbmUgb2ZcbiAgLy8gdGhlIHR3byB0cmlnZ2VycyB0byBjbG9zZSBpdCAodGhlIHNlY29uZCBjbG9zaW5nIHRyaWdnZXJcbiAgLy8gaXMgdXNlciBzZWxlY3RpbmcgbmF2aWdhdGlvbiBpdGVtKS4gT3BlbmluZyBhbmQgY2xvc2luZ1xuICAvLyBtZW51IGlzIGZpbmFsaXplZCBpbiB0aGUgZWZmZWN0IGJlbG93IHRoYXQgcmVzcG9uZHMgdG9cbiAgLy8gdGhlIG1lbnVBY3RpdmUgY2hhbmdlLlxuICBjb25zdCB0b2dnbGVNZW51ID0gKCkgPT4ge1xuICAgIGlmIChtZW51QWN0aXZlKSB7XG4gICAgICBjbG9zZU1lbnUoKVxuICAgIH0gZWxzZSB7XG4gICAgICBzZXRNZW51QWN0aXZlKHRydWUpXG4gICAgICAvLyByZWNvcmQgc2Nyb2xsIHBvc2l0aW9uIHNvIHRoYXQgd2UgY2FuIHJlc3RvcmUgaXQgaWYgbmVlZGVkXG4gICAgICByZWNvcmRTY3JvbGxQb3NpdGlvbigpXG4gICAgfVxuICAgIHNldEFuaW1hdGlvbkRlbGF5KDApXG4gIH1cblxuICAvLyBUaGlzIGhvb2sgcmVzcG9uZHMgdG8gdGhlIGNoYW5nZSBvZiBsb2NhdGlvbjogdGhlIHVzZXJcbiAgLy8gc2VsZWN0ZWQgYSBsaW5rIGluIHRoZSBuYXZpZ2F0aW9uIG1lbnUuXG4gIHVzZU1vYmlsZURvY3VtZW50TmF2aWdhdG9yKHtcbiAgICBvbk5ld1BhdGhTZWxlY3RlZDogKCkgPT4ge1xuICAgICAgY2xvc2VNZW51KClcbiAgICAgIGRpc2FibGVTY3JvbGxSZXN0b3JhdGlvbigpXG4gICAgICBzZXRBbmltYXRpb25EZWxheSgwLjMpXG4gICAgfSxcbiAgICBsb2NhdGlvblxuICB9LCBbbG9jYXRpb25dKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG1lbnVBY3RpdmUpIHtcbiAgICAgIC8vIFdlIGRvIG5vdCB3YW50IHRvIGNoYW5nZSB0byAncG9zaXRpb246IGZpeGVkJyBpbW1lZGlhdGVseSBhc1xuICAgICAgLy8gdGhpcyBtYXkgYmUgdmlzaWJsZSBhbmQgY3JlYXRlIHVucGxlYXNhbnQgdmlzdWFsIGVmZmVjdC5cbiAgICAgIC8vIFRoZSB0aW1lb3V0IGlzIGFib3V0IHRoZSBzYW1lIGFzIHRoZSB0cmFuc2l0aW9uIGR1cmF0aW9uIGluIENTUy5cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzZXRQb3NpdGlvbignZml4ZWQnKVxuICAgICAgICBzZXRHcmlkKCcxMDB2dyAxMDB2dycpXG4gICAgICB9LCAyMDApXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlc3RvcmluZyBzY3JvbGwgcG9zaXRpb24gY2FuIG9ubHkgYmUgZWZmZWN0aXZlXG4gICAgICAvLyBhZnRlciBwb3NpdGlvbiBpcyBzZXQgYmFjayB0byAncmVsYXRpdmUnXG4gICAgICAvLyBXZSBoYXZlIHR3byBjYXNlczogKDEpIGNsb3NpbmcgbWVudSBpcyB0aGUgZXhwbGljaXQgdXNlclxuICAgICAgLy8gYWN0aW9uIChieSBwcmVzc2luZyB0aGUgXCJ0b2dnbGUgbWVudVwiIGJ1dHRvbikgb3IgKDIpIGFzXG4gICAgICAvLyBhIHJlc3VsdCBvZiBjaGFuZ2luZyBsb2NhdGlvbiAodXNlciBzZWxlY3RlZCBhIG5ldyBtZW51IGl0ZW0pLlxuICAgICAgLy8gSW4gYm90aCBjYXNlcyB3ZSB1c2UgdGhlIGNsb3NlTWVudSBmdW5jdGlvbiBhYm92ZSB0byB0cmlnZ2VyXG4gICAgICAvLyB0aGUgY2xvc2luZyBwcm9jZXNzLiBXZSBjb3VsZCBub3QgcmVzdG9yZSB0aGUgc2Nyb2xsIHBvc3NpdGlvblxuICAgICAgLy8gcmlnaHQgdGhlcmUgYXMgdGhpcyB3b3VsZCBiZSB0b28gZWFybHkgLSB0aGUgY2hhbmdpbmcgZnJvbVxuICAgICAgLy8gJ3Bvc2l0aW9uOiBmaXhlZCcgdG8gJ3Bvc2l0aW9uOiByZWxhdGl2ZScgbmVlZHMgdG8gYmUgZWZmZWN0aXZlXG4gICAgICAvLyBiZWZvcmUgd2UgY2FuIGNoYW5nZSB0aGUgc2Nyb2xsIHBvc2l0aW9uLlxuICAgICAgcmVzdG9yZVNjcm9sbFBvc2l0aW9uKClcbiAgICB9XG4gIH0sIFttZW51QWN0aXZlXSlcblxuICBjb25zdCB7IHNpdGU6IHsgc2l0ZU1ldGFkYXRhOiB7IHRpdGxlIH0gfSwgbmF2aWdhdGlvbjogeyBkb2NzIH0sIGZpbGU6IHsgcHVibGljVVJMOiBtZW51QnV0dG9uQmFja2dyb3VuZEltYWdlIH0gfSA9IGRhdGFcbiAgcmV0dXJuICg8PlxuICAgIDxEb2N1bWVudGF0aW9uTGF5b3V0R3JpZCBjc3M9e3tcbiAgICAgIHBvc2l0aW9uLFxuICAgICAgaGVpZ2h0OiAnMTAwdmgnLFxuICAgICAgbGVmdDogbWVudUFjdGl2ZSA/IDAgOiAnLTMwMHB4JyxcbiAgICAgIG1hcmdpbjogMCxcbiAgICAgIGdyaWRHYXA6IDAsXG4gICAgICBncmlkVGVtcGxhdGVDb2x1bW5zOiBncmlkLFxuICAgICAgdHJhbnNpdGlvbjogYGFsbCAuMnMgZWFzZS1pbi1vdXQgJHthbmltYXRpb25EZWxheX1zYFxuICAgIH19PlxuICAgICAgPFNpZGViYXJHcmlkSXRlbT5cbiAgICAgICAgPEZpeGVkTmF2aWdhdGlvbiBjc3M9e3tcbiAgICAgICAgICBtaW5XaWR0aDogbWVudUFjdGl2ZSA/ICcxMDB2dycgOiAnMzAwcHgnLFxuICAgICAgICAgIG1heFdpZHRoOiBtZW51QWN0aXZlID8gJzEwMHZ3JyA6ICczMDBweCcsXG4gICAgICAgICAgdHJhbnNpdGlvbjogYGFsbCAuMnMgZWFzZS1pbi1vdXQgJHthbmltYXRpb25EZWxheX1zYCxcbiAgICAgICAgICBoZWlnaHQ6ICcxMDB2aCdcbiAgICAgICAgfX0+XG4gICAgICAgICAgPFNpdGVUaXRsZSB0aXRsZT17dGl0bGV9IC8+XG4gICAgICAgICAgPE5hdmlnYXRpb24gZG9jcz17ZG9jc30gbG9jYXRpb249e2xvY2F0aW9ufSBvblN0YXRlQ2hhbmdlZD17b25TdGF0ZUNoYW5nZWR9IGRlbHRhcz17ZGVsdGFzfSAvPlxuICAgICAgICA8L0ZpeGVkTmF2aWdhdGlvbj5cbiAgICAgIDwvU2lkZWJhckdyaWRJdGVtPlxuICAgICAgPENvbnRlbnRHcmlkSXRlbT5cbiAgICAgICAgeyBjaGlsZHJlbiB9XG4gICAgICA8L0NvbnRlbnRHcmlkSXRlbT5cbiAgICA8L0RvY3VtZW50YXRpb25MYXlvdXRHcmlkPlxuICAgIDxNZW51QnV0dG9uIG9uQ2xpY2s9e3RvZ2dsZU1lbnV9IGJhY2tncm91bmRJbWFnZT17bWVudUJ1dHRvbkJhY2tncm91bmRJbWFnZX0gY3NzPXt7XG4gICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgIHpJbmRleDogMjAsXG4gICAgICBib3R0b206ICczMHB4JyxcbiAgICAgIHJpZ2h0OiAnMzBweCcsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IG1lbnVBY3RpdmUgPyAnI0Y0ODZDQScgOiAnd2hpdGUnXG4gICAgfX0gLz5cbiAgPC8+XG4gIClcbn1cblxuZXhwb3J0IHsgRG9jdW1lbnRhdGlvbkxheW91dFNtYWxsIH1cbiJdfQ== */"))
  }));
};

export { DocumentationLayoutSmall };
//# sourceMappingURL=DocumentationLayoutSmall.js.map