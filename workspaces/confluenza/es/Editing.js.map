{"version":3,"sources":["../source/Editing.js"],"names":["React","A","Wrapper","EditFile","fileAbsolutePath","linkText","match","fileRelativePath","editBaseUrl","props","renderEditThisPageLink","externalContent","childMarkdownRemark","renderOriginalContent","renderExternalContent","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,IAAMC,CAAC,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAV;;AAgBA,IAAMC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB;;IAOMC,Q;;;;;;;;;;;;;;;;;;6EACqB,UAACC,gBAAD,EAAmBC,QAAnB,EAAgC;AACvD,UAAMC,KAAK,GAAGF,gBAAgB,CAACE,KAAjB,CAAuB,qBAAvB,KAAiDF,gBAAgB,CAACE,KAAjB,CAAuB,WAAvB,CAA/D;;AACA,UAAIA,KAAJ,EAAW;AACT,YAAMC,gBAAgB,GAAGD,KAAK,CAAC,CAAD,CAA9B;AADS,YAEDE,WAFC,GAEe,MAAKC,KAFpB,CAEDD,WAFC;AAGT,eACE,cAAC,CAAD;AAAG,UAAA,IAAI,YAAKA,WAAL,cAAoBD,gBAApB;AAAP,WAAgDF,QAAhD,CADF;AAGD;;AACD,aAAO,IAAP;AACD,K;;4EAEuB,UAAAD,gBAAgB,EAAI;AAC1C,aAAO,MAAKM,sBAAL,CAA4BN,gBAA5B,EAA8C,gBAA9C,CAAP;AACD,K;;4EAEuB,UAAAO,eAAe,EAAI;AACzC,UAAIA,eAAJ,EAAqB;AACnB,YAAMP,gBAAgB,GAAGO,eAAe,CAACC,mBAAhB,CAAoCR,gBAA7D;AACA,eAAO,MAAKM,sBAAL,CAA4BN,gBAA5B,EAA8C,4BAA9C,CAAP;AACD;;AACD,aAAO,IAAP;AACD,K;;;;;;;6BAES;AAAA,wBACsC,KAAKK,KAD3C;AAAA,UACAL,gBADA,eACAA,gBADA;AAAA,UACkBO,eADlB,eACkBA,eADlB;AAGR,aACE,cAAC,OAAD,QACI,KAAKE,qBAAL,CAA2BT,gBAA3B,CADJ,EAEI,KAAKU,qBAAL,CAA2BH,eAA3B,CAFJ,CADF;AAMD;;;;EAlCoBX,KAAK,CAACe,S;;AAqC7B,SAASZ,QAAT","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\n\nconst A = styled.a({\n  // fontFamily: 'Roboto Mono, monospace',\n  fontFamily: 'Roboto Condensed, sans-serif',\n  fontWeight: '100',\n  fontSize: '0.9rem',\n  color: '#FF55BE',\n  marginRight: '2rem',\n  '@media (max-width: 420px)': {\n    marginRight: '10px'\n  },\n  '&:hover': {\n    textDecoration: 'underline',\n    color: '#FF55BE'\n  }\n})\n\nconst Wrapper = styled.div({\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  justifyContent: 'flex-start',\n  paddingLeft: '3px'\n})\n\nclass EditFile extends React.Component {\n  renderEditThisPageLink = (fileAbsolutePath, linkText) => {\n    const match = fileAbsolutePath.match(/.*\\/(workspaces.*)$/) || fileAbsolutePath.match(/.*\\/(.*)$/)\n    if (match) {\n      const fileRelativePath = match[1]\n      const { editBaseUrl } = this.props\n      return (\n        <A href={`${editBaseUrl}/${fileRelativePath}`}>{linkText}</A>\n      )\n    }\n    return null\n  }\n\n  renderOriginalContent = fileAbsolutePath => {\n    return this.renderEditThisPageLink(fileAbsolutePath, 'Edit this page')\n  }\n\n  renderExternalContent = externalContent => {\n    if (externalContent) {\n      const fileAbsolutePath = externalContent.childMarkdownRemark.fileAbsolutePath\n      return this.renderEditThisPageLink(fileAbsolutePath, 'Edit external content page')\n    }\n    return null\n  }\n\n  render () {\n    const { fileAbsolutePath, externalContent } = this.props\n\n    return (\n      <Wrapper>\n        { this.renderOriginalContent(fileAbsolutePath) }\n        { this.renderExternalContent(externalContent) }\n      </Wrapper>\n    )\n  }\n}\n\nexport { EditFile }\n"],"file":"Editing.js"}