{"version":3,"sources":["../../source/navigation/NavigationHeading.js"],"names":["React","GithubSlugger","NavigationLink","NavigationHeading","cln","currentLocation","href","location","pathname","replace","hash","linkClassName","className","node","setState","props","path","value","index","slugger","anchor","slug","recordLinkNode","state","getActiveProps","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,SAASC,cAAT,QAA+B,kBAA/B;;;IAEMC,iB;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,GAAG,EAAE;AADC,K;;qEAIS,UAACC,eAAD,EAAkBC,IAAlB,EAA2B;AAC1C,YAAKC,QAAL,GAAgBF,eAAe,CAACG,QAAhB,CAAyBC,OAAzB,CAAiC,KAAjC,EAAwC,EAAxC,CAAhB;AACA,YAAKC,IAAL,GAAYL,eAAe,CAACK,IAA5B;AACA,YAAKJ,IAAL,GAAYA,IAAZ;;AACA,UAAI,MAAKK,aAAT,EAAwB;AACtB,YAAI,UAAG,MAAKJ,QAAR,SAAmB,MAAKG,IAAxB,MAAmC,MAAKJ,IAA5C,EAAkD;AAChD,iBAAO;AAAEM,YAAAA,SAAS,YAAK,MAAKD,aAAV;AAAX,WAAP;AACD,SAFD,MAEO;AACL,iBAAO;AAAEC,YAAAA,SAAS,EAAE,MAAKD;AAAlB,WAAP;AACD;AACF;;AACD,aAAO,IAAP;AACD,K;;qEAEgB,UAAAE,IAAI,EAAI;AACvB,YAAKF,aAAL,GAAqBE,IAAI,IAAIA,IAAI,CAACD,SAAlC;;AACA,UAAI,UAAG,MAAKL,QAAR,SAAmB,MAAKG,IAAxB,MAAmC,MAAKJ,IAA5C,EAAkD;AAChD,cAAKQ,QAAL,CAAc;AAAEV,UAAAA,GAAG,YAAK,MAAKO,aAAV;AAAL,SAAd;AACD,OAFD,MAEO;AACL,cAAKG,QAAL,CAAc;AAAEV,UAAAA,GAAG,EAAE,MAAKO;AAAZ,SAAd;AACD;AACF,K;;;;;;;6BAES;AAAA;;AAAA,wBACuB,KAAKI,KAD5B;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,KADN,eACMA,KADN;AAAA,UACaC,KADb,eACaA,KADb;AAER,UAAMC,OAAO,GAAG,IAAIlB,aAAJ,EAAhB;AACA,UAAMmB,MAAM,GAAGD,OAAO,CAACE,IAAR,CAAaJ,KAAb,CAAf;AACA,aACE;AAAI,QAAA,GAAG,EAAEC;AAAT,SACE,cAAC,cAAD;AACE,QAAA,EAAE,YAAKF,IAAL,cAAaI,MAAb,CADJ;AAEE,QAAA,GAAG,EAAE,KAAKE,cAFZ;AAGE,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWnB,GAHxB;AAIE,QAAA,QAAQ,EAAE;AAAA,cAAGG,QAAH,QAAGA,QAAH;AAAA,cAAaD,IAAb,QAAaA,IAAb;AAAA,iBAAwB,MAAI,CAACkB,cAAL,CAAoBjB,QAApB,EAA8BD,IAA9B,CAAxB;AAAA;AAJZ,SAMIW,KANJ,CADF,CADF;AAYD;;;;EA5C6BjB,KAAK,CAACyB,S;;AA+CtC,SAAStB,iBAAT","sourcesContent":["import React from 'react'\nimport GithubSlugger from 'github-slugger'\n\nimport { NavigationLink } from './NavigationLink'\n\nclass NavigationHeading extends React.Component {\n  state = {\n    cln: ''\n  }\n\n  getActiveProps = (currentLocation, href) => {\n    this.location = currentLocation.pathname.replace(/\\/$/, '')\n    this.hash = currentLocation.hash\n    this.href = href\n    if (this.linkClassName) {\n      if (`${this.location}${this.hash}` === this.href) {\n        return { className: `${this.linkClassName} active` }\n      } else {\n        return { className: this.linkClassName }\n      }\n    }\n    return null\n  }\n\n  recordLinkNode = node => {\n    this.linkClassName = node && node.className\n    if (`${this.location}${this.hash}` === this.href) {\n      this.setState({ cln: `${this.linkClassName} active` })\n    } else {\n      this.setState({ cln: this.linkClassName })\n    }\n  }\n\n  render () {\n    const { path, value, index } = this.props\n    const slugger = new GithubSlugger()\n    const anchor = slugger.slug(value)\n    return (\n      <li key={index}>\n        <NavigationLink\n          to={`${path}#${anchor}`}\n          ref={this.recordLinkNode}\n          className={this.state.cln}\n          getProps={({ location, href }) => this.getActiveProps(location, href)}\n        >\n          { value }\n        </NavigationLink>\n      </li>\n    )\n  }\n}\n\nexport { NavigationHeading }\n"],"file":"NavigationHeading.js"}