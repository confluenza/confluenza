{"componentChunkName":"component---gatsby-theme-confluenza-src-templates-markdown-template-js","path":"/demo-workspace-1","result":{"data":{"site":{"siteMetadata":{"title":"Confluenza","editBaseUrl":"https://github.com/confluenza/confluenza/blob/master"}},"config":{"nodes":[{"tag":"user","title":"User Documentation"},{"tag":"developer","title":"Developer Documentation"},{"tag":"other","title":"Other Documents"},{"tag":"demo1","title":"Demo Workspace 1"},{"tag":"demo2","title":"Demo Workspace 2"},{"tag":"package","title":"Packages"}]},"doc":null,"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/demo-workspace-1\",\n  \"title\": \"Demo Workspace 1\",\n  \"tag\": \"demo1\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mdxjs.com\"\n  }, \"MDX\"), \" allows you to use JSX directly in your Markdown documents.\"), mdx(\"p\", null, \"Imagine, you are documenting a component. Wouldn't it be nice to actually show a working component\\ndirectly in your Markdown document? I mean, not a screenshot, or code snippet, but real rendered\\ncomponent. MDX makes it possible.\"), mdx(\"p\", null, \"Below you see a component that renders its content with a border of the given thickness.\"), mdx(WithBorder, {\n    thickness: 5,\n    mdxType: \"WithBorder\"\n  }, \"This text should appear in a border `5px` thick.\"), mdx(\"p\", null, \"This component is imported as any other regular react component with:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-javascript\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"import\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \" WithBorder\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" ImportingMDXDocuments \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"from\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'../homepage/src/components/mdx'\")))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The import statement must be placed directly after \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"frontmatter\"), \" if one is used.\")), mdx(ImportingMDXDocuments, {\n    mdxType: \"ImportingMDXDocuments\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"In this file, as an example, we show that you can import React components and other MDX documents\\nfrom any location in your source three. In some cases though, it may be better to keep your \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"documentation\"), \"\\ncomponents in the same workspace.\")));\n}\n;\nMDXContent.isMDXComponent = true;","fileAbsolutePath":"/home/runner/work/confluenza/confluenza/workspaces/demo-workspace-1/CONFLUENZA.mdx","frontmatter":{"title":"Demo Workspace 1"}}},"pageContext":{}},"staticQueryHashes":["1136224994"]}